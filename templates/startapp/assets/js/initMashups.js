var tpid="dashboard.html";function hideLoad(){    $('#preloader-logo2').fadeOut();    $('#preloader-icon2').fadeOut();    $('#preloader2').delay(350).fadeOut(function(){        qlik.resize();    });}function pager($scope){    scp=$scope;    $scope.selections=false;    $scope.curTemplate='dashboard.html';    $scope.getTemplate=function(){        return $scope.curTemplate;    }    $scope.setTemplate=function(tp){        tpid=tp;        $scope.curTemplate=tp;    }    $scope.ready=function(){        panelize("#template");        excludeBS();        hideLoad();    }    $scope.hideSel=function(){        fixSel();        $scope.selections=!($scope.selections);    };    $scope.back=function(detail){        animateHide($('#'+detail),$('#sum'));    };    $scope.showDetails=function(detail){        animateHide($('#sum'),$('#'+detail));    };}var qlik;var curApp;var rootPath=window.location.hostname;var portUrl="80";if(window.location.port==""){    if("https:" == window.location.protocol)        portUrl="443";    else{        portUrl="80";    }}else    portUrl=window.location.port;var pathRoot="//localhost:4848/extensions/";if(portUrl!="4848")    pathRoot="//"+rootPath+":"+portUrl+"/resources/";var config = {    host: window.location.hostname,    prefix: "/",    port: window.location.port,    isSecure: "https:" === window.location.protocol};require.config( {    waitSeconds:0,    baseUrl: ( config.isSecure ? "https://" : "http://" ) + config.host + (config.port ? ":" + config.port: "") + config.prefix + "resources",    paths: {        jquery: pathRoot +'mdemo/templates/admin/js/libs/jquery-2.1.1.min',        "easing":pathRoot +'mdemo/templates/unify/assets/plugins/jquery.easing.min',        "jqm":   pathRoot +'mdemo/templates/unify/assets/plugins/jquery/jquery-migrate.min',        'boot':  pathRoot +'mdemo/templates/unify/assets/plugins/bootstrap/js/bootstrap.min',        "para":	pathRoot +"mdemo/templates/unify/assets/plugins/jquery.parallax"  ,        "waypoints":	pathRoot +"mdemo/templates/unify/assets/plugins/counter/waypoints",        "coun":	pathRoot +"mdemo/templates/unify/assets/plugins/counter/jquery.counterup",        "caro":	pathRoot +"mdemo/templates/unify/assets/plugins/owl-carousel/owl.carousel" ,        "form":	pathRoot +"mdemo/templates/unify/assets/plugins/sky-forms-pro/skyforms/js/jquery.form.min"   ,        "vali":	pathRoot +"mdemo/templates/unify/assets/plugins/sky-forms-pro/skyforms/js/jquery.validate.min"  ,        "punc":	pathRoot +"mdemo/templates/unify/assets/plugins/revolution-slider/rs-plugin/js/jquery.themepunch.tools.min"  ,        "revo":	pathRoot +"mdemo/templates/unify/assets/plugins/revolution-slider/rs-plugin/js/jquery.themepunch.revolution.min" ,        "cube":	pathRoot +"mdemo/templates/unify/assets/plugins/cube-portfolio/cubeportfolio/js/jquery.cubeportfolio.min"  ,        "logi":	pathRoot +"mdemo/templates/unify/assets/js/forms/login"  ,        "cont":	pathRoot +"mdemo/templates/unify/assets/js/forms/contact" ,        "load":	pathRoot +"mdemo/templates/unify/assets/js/plugins/pace-loader" ,        "owlc":	pathRoot +"mdemo/templates/unify/assets/js/plugins/owl-carousel" ,        "revs":	pathRoot +"mdemo/templates/unify/assets/js/plugins/revolution-slider",        "cblb":	pathRoot +"mdemo/templates/unify/assets/js/plugins/cube-portfolio/cube-portfolio-lightbox",        "smtc": pathRoot +"mdemo/templates/unify/assets/plugins/smoothScroll",        "one":	pathRoot +"mdemo/templates/unify/assets/js/one.app",        "edit" : pathRoot +"mdemo/templates/unify/assets/js/editable"    },    shim: {        'easing': {            deps: ['jquery'],            exports: 'easing'        },        'jqm': {            deps: ['jquery'],            exports: 'jqm'        },        'boot': {            deps: ['jquery'],            exports: 'boot'        },        'para': {            deps: ['jquery'],            exports: 'para'        },        'waypoints': {            deps: ['jquery'],            exports: 'waypoints'        },        'coun': {            deps: ['jquery'],            exports: 'coun'        },        'caro': {            deps: ['jquery'],            exports: 'caro'        },        'form': {            deps: ['jquery'],            exports: 'form'        },        'vali': {            deps: ['jquery'],            exports: 'vali'        },        'punc': {            deps: ['jquery'],            exports: 'punc'        },        'revo': {            deps: ['jquery'],            exports: 'revo'        },        'cube': {            deps: ['jquery'],            exports: 'cube'        },        'logi': {            deps: ['jquery'],            exports: 'logi'        },        'cont': {            deps: ['jquery'],            exports: 'cont'        },        'load': {            deps: ['jquery'],            exports: 'load'        },        'owlc': {            deps: ['jquery'],            exports: 'owlc'        },        'revs': {            deps: ['jquery'],            exports: 'revs'        },        'cblb': {            deps: ['jquery'],            exports: 'cblb'        },        'smtc': {            deps: ['jquery'],            exports: 'smtc'        },        'one': {            deps: ['jquery'],            exports: 'one'        },        'edit': {            deps: ['jquery'],            exports: 'edit'        }    }} )( ["js/qlik","jquery","easing","jqm","boot","para","waypoints","coun","caro","form","vali","punc","revo","cube","one","logi","cont","load","owlc","revs","cblb","smtc","edit"], function ( qlikview,$ ) {    qlik = qlikview;    if (getURLParameter('app') != 'undefined') {        var app = qlikview.openApp(decodeURI(getURLParameter('app')), config);        curApp = app;    }    qlikview.setOnError( function ( error ) {        alert( error.message );    } );});function excludeBS(){    $("body").find('*').each(function(){        if(!$(this).hasClass('qvobject'))            $(this).addClass('qv');    });}function restoreObj(){    if(typeof(qlik)=='undefined') {        setTimeout(function () {            restoreObj()        }, 100)        return;    }    makeEdit();    excludeBS();    if(getURLParameter('app')!='null')    setTimeout(function(){        var appId=decodeURI(getURLParameter('app'));        $('#CurrentSelections').empty();        qlik.openApp(appId).getObject($('#CurrentSelections'),'CurrentSelections');        $('.qvplaceholder').each(function( index ) {            if(appId && localStorage.getItem(this.id+'#'+ appId) && localStorage.getItem(this.id+'#'+ appId).split('#').length==1 ){                $(this).empty();                $(this).removeClass('qv');                $(this).removeClass('qvtarget');                qlik.openApp(appId).getObject(this, localStorage.getItem(this.id+'#'+ appId)).then(function () {qlik.resize();                });            }else if(appId && localStorage.getItem(this.id+'#'+ appId) && localStorage.getItem(this.id+'#'+ appId).split('#').length>1){                $(this).empty();                $(this).removeClass('qv');                $(this).removeClass('qvtarget');                qlik.openApp(appId).getSnapshot(this, localStorage.getItem(this.id+'#'+ appId).split('#')[0]).then(function () {qlik.resize();                });            }            else{                $(this).empty();                $(this).addClass('qv');                $(this).addClass('qvtarget');            }        })    },100);    setTimeout(function(){qlik.resize();},200);}function getURLParameter(a) {    return (RegExp(a + "=(.+?)(&|$)").exec(location.search) || [null, null])[1]}function makeDroppy() {    $(".qvplaceholder").on('dragover', function (event) {        event.preventDefault();        $(this).addClass("drop-hover");    }).on('dragleave', function (event) {        event.preventDefault();        $(this).removeClass("drop-hover");    }).on('drop', function (event) {        var app = qlik.openApp(decodeURI(getURLParameter('app')), config);        $(this).removeClass("drop-hover");        event.preventDefault();        $(this).empty();        var id = event.originalEvent.dataTransfer.getData('text').split("#")[1];        var type = event.originalEvent.dataTransfer.getData('text').split("#")[0];        $(this).removeClass('qv');        $(this).removeClass('qvtarget');        if (type != 'snapshot') {            qlik.openApp(app.id).getObject($('#CurrentSelections'), 'CurrentSelections');            localStorage.setItem(this.id + '#' + app.id, id);            qlik.openApp(app.id).getObject(this, id).then(function (o) {            });        }        else {            localStorage.setItem(this.id + '#' + app.id, id + '#snap');            qlik.openApp(app.id).getSnapshot(this, id).then(function () {            });        }    })}